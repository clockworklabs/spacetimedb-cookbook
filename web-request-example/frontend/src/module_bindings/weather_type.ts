// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
import {
  AlgebraicType,
  AlgebraicValue,
  BinaryReader,
  BinaryWriter,
  type CallReducerFlags,
  ConnectionId,
  DbConnectionBuilder,
  DbConnectionImpl,
  type DbContext,
  type ErrorContextInterface,
  type Event,
  type EventContextInterface,
  Identity,
  ProductType,
  ProductTypeElement,
  type ReducerEventContextInterface,
  SubscriptionBuilderImpl,
  type SubscriptionEventContextInterface,
  SumType,
  SumTypeVariant,
  TableCache,
  TimeDuration,
  Timestamp,
  deepEqual,
} from "@clockworklabs/spacetimedb-sdk";
import { HourlyUnits as __HourlyUnits } from "./hourly_units_type";
import { Hourly as __Hourly } from "./hourly_type";

export type Weather = {
  id: number,
  latitude: number,
  longitude: number,
  generationtimeMs: number,
  utcOffsetSeconds: number,
  timezone: string,
  timezoneAbbreviation: string,
  elevation: number,
  hourlyUnits: __HourlyUnits,
  hourly: __Hourly,
};

/**
 * A namespace for generated helper functions.
 */
export namespace Weather {
  /**
  * A function which returns this type represented as an AlgebraicType.
  * This function is derived from the AlgebraicType used to generate this type.
  */
  export function getTypeScriptAlgebraicType(): AlgebraicType {
    return AlgebraicType.createProductType([
      new ProductTypeElement("id", AlgebraicType.createI32Type()),
      new ProductTypeElement("latitude", AlgebraicType.createF64Type()),
      new ProductTypeElement("longitude", AlgebraicType.createF64Type()),
      new ProductTypeElement("generationtimeMs", AlgebraicType.createF64Type()),
      new ProductTypeElement("utcOffsetSeconds", AlgebraicType.createI32Type()),
      new ProductTypeElement("timezone", AlgebraicType.createStringType()),
      new ProductTypeElement("timezoneAbbreviation", AlgebraicType.createStringType()),
      new ProductTypeElement("elevation", AlgebraicType.createF64Type()),
      new ProductTypeElement("hourlyUnits", __HourlyUnits.getTypeScriptAlgebraicType()),
      new ProductTypeElement("hourly", __Hourly.getTypeScriptAlgebraicType()),
    ]);
  }

  export function serialize(writer: BinaryWriter, value: Weather): void {
    Weather.getTypeScriptAlgebraicType().serialize(writer, value);
  }

  export function deserialize(reader: BinaryReader): Weather {
    return Weather.getTypeScriptAlgebraicType().deserialize(reader);
  }

}


